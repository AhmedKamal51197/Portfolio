<?php

namespace App\Traits;

use Illuminate\Support\Str;

trait VideoTrait
{
    protected function uploadVideoToDirectory($videoFile, $model = '')
    {
        $model     = Str::plural($model);
        $model     = Str::ucfirst($model);
        $path      = public_path("Videos/$model");

        // إنشاء المجلد لو مش موجود
        if (!is_dir($path)) {
            mkdir($path, 0755, true);
        }

        $videoName = str_replace(' ', '', 'video_' . time() . $videoFile->getClientOriginalName());
        $videoFile->move($path, $videoName);

        return $videoName;
    }

    protected function updateModelVideo($model, $videoFile, $directory)
    {
        $this->deleteVideoFromDirectory($model->video, $directory);
        return $this->uploadVideoToDirectory($videoFile, $directory);
    }

    protected function deleteVideoFromDirectory($videoName, $model)
    {
        $model = Str::plural($model);
        $model = Str::ucfirst($model);

        $path = public_path("Videos/$model/$videoName");

        if (file_exists($path)) {
            unlink($path);
        }
    }

    protected function getVideoPathFromDirectory($videoName = null, $directory = null, $defaultVideo = 'default.mp4')
    {
        $directory = Str::plural($directory);
        $directory = Str::ucfirst($directory);

        $videoPath         = public_path("Videos/$directory/$videoName");
        $fallbackVideoPath = public_path("placeholder_videos/$directory/$defaultVideo");

        if ($videoName && $directory && file_exists($videoPath)) {
            return asset("Videos/$directory/$videoName");
        } elseif (file_exists($fallbackVideoPath)) {
            return asset("placeholder_videos/$directory/$defaultVideo");
        } else {
            return asset("placeholder_videos/$defaultVideo");
        }
    }
}
